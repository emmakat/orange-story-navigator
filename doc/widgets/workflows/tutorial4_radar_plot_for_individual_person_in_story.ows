<?xml version='1.0' encoding='utf-8'?>
<scheme version="2.0" title="" description="">
	<nodes>
		<node id="0" name="Narrative Network" qualified_name="storynavigation.widgets.OWSNNarrativeNetwork.OWSNNarrativeNetwork" project_name="storynavigator" version="" title="Narrative Network" position="(458.5, 446.875)" />
		<node id="1" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (1)" position="(581.0, 562.125)" />
		<node id="2" name="Select Rows" qualified_name="Orange.widgets.data.owselectrows.OWSelectRows" project_name="Orange3" version="" title="Select Rows" position="(799.0, 560.625)" />
		<node id="3" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (5)" position="(1001.409090909091, 648.8409090909092)" />
		<node id="4" name="Merge Data" qualified_name="Orange.widgets.data.owmergedata.OWMergeData" project_name="Orange3" version="" title="Merge Data" position="(1072.25, 379.5)" />
		<node id="5" name="Unique" qualified_name="Orange.widgets.data.owunique.OWUnique" project_name="Orange3" version="" title="Unique" position="(724.75, 258.25)" />
		<node id="6" name="Select Columns" qualified_name="Orange.widgets.data.owselectcolumns.OWSelectAttributes" project_name="Orange3" version="" title="Select Columns" position="(1193.0, 376.875)" />
		<node id="7" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (7)" position="(1295.670454545454, 270.6363636363636)" />
		<node id="8" name="Group by" qualified_name="Orange.widgets.data.owgroupby.OWGroupBy" project_name="Orange3" version="" title="Group by (1)" position="(1382.465909090909, 384.9204545454545)" />
		<node id="9" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (6)" position="(1527.6136363636365, 385.5454545454545)" />
		<node id="10" name="Python Script" qualified_name="Orange.widgets.data.owpythonscript.OWPythonScript" project_name="Orange3" version="" title="Python Script (2)" position="(1794.670454545455, 387.284090909091)" />
		<node id="11" name="Edit Domain" qualified_name="Orange.widgets.data.oweditdomain.OWEditDomain" project_name="Orange3" version="" title="Edit Domain (2)" position="(1658.386363636364, 386.89772727272725)" />
		<node id="12" name="Elements" qualified_name="storynavigation.widgets.OWSNTagger.OWSNTagger" project_name="storynavigator" version="" title="Elements" position="(553.7272727272726, 242.81818181818176)" />
		<node id="13" name="Select Rows" qualified_name="Orange.widgets.data.owselectrows.OWSelectRows" project_name="Orange3" version="" title="Select Rows (1)" position="(861.090909090909, 265.5454545454545)" />
		<node id="14" name="File" qualified_name="Orange.widgets.data.owfile.OWFile" project_name="Orange3" version="" title="File" position="(301.909090909091, 353.72727272727275)" />
		<node id="15" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table" position="(672.0, 448.27272727272725)" />
		<node id="16" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (1)" position="(542.9090909090909, 360.0909090909091)" />
		<node id="17" name="Import Documents" qualified_name="orangecontrib.text.widgets.owimportdocuments.OWImportDocuments" project_name="Orange3-Text" version="" title="Import Documents" position="(288.0, 207.0)" />
		<node id="18" name="Data Table" qualified_name="Orange.widgets.data.owtable.OWTable" project_name="Orange3" version="" title="Data Table (2)" position="(1050.0, 138.0)" />
	</nodes>
	<links>
		<link id="0" source_node_id="0" sink_node_id="1" source_channel="SVO tuples" sink_channel="Data" enabled="true" source_channel_id="edge_data" sink_channel_id="data" />
		<link id="1" source_node_id="2" sink_node_id="3" source_channel="Matching Data" sink_channel="Data" enabled="true" source_channel_id="matching_data" sink_channel_id="data" />
		<link id="2" source_node_id="6" sink_node_id="7" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="3" source_node_id="8" sink_node_id="9" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="4" source_node_id="9" sink_node_id="11" source_channel="Selected Data" sink_channel="Data" enabled="true" source_channel_id="selected_data" sink_channel_id="data" />
		<link id="5" source_node_id="11" sink_node_id="10" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="6" source_node_id="4" sink_node_id="6" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="7" source_node_id="12" sink_node_id="5" source_channel="Story elements" sink_channel="Data" enabled="true" source_channel_id="dataset_level_data" sink_channel_id="data" />
		<link id="8" source_node_id="5" sink_node_id="13" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="9" source_node_id="13" sink_node_id="4" source_channel="Matching Data" sink_channel="Extra Data" enabled="true" source_channel_id="matching_data" sink_channel_id="extra_data" />
		<link id="10" source_node_id="6" sink_node_id="8" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="11" source_node_id="1" sink_node_id="2" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="12" source_node_id="14" sink_node_id="12" source_channel="Data" sink_channel="Custom tags" enabled="true" source_channel_id="data" sink_channel_id="custom_tag_dict" />
		<link id="13" source_node_id="1" sink_node_id="15" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="14" source_node_id="14" sink_node_id="16" source_channel="Data" sink_channel="Data" enabled="true" source_channel_id="data" sink_channel_id="data" />
		<link id="15" source_node_id="17" sink_node_id="12" source_channel="Corpus" sink_channel="Stories" enabled="true" source_channel_id="data" sink_channel_id="stories" />
		<link id="16" source_node_id="17" sink_node_id="0" source_channel="Corpus" sink_channel="Corpus" enabled="true" source_channel_id="data" sink_channel_id="corpus" />
		<link id="17" source_node_id="13" sink_node_id="18" source_channel="Matching Data" sink_channel="Data" enabled="true" source_channel_id="matching_data" sink_channel_id="data" />
		<link id="18" source_node_id="2" sink_node_id="4" source_channel="Matching Data" sink_channel="Data" enabled="true" source_channel_id="matching_data" sink_channel_id="data" />
	</links>
	<annotations>
		<arrow id="0" start="(247.22076534576496, 408.5002913752912)" end="(286.59576534576496, 387.1252913752912)" fill="#C1272D" />
		<text id="1" type="text/plain" rect="(89.00922688422645, 393.39452214452217, 157.0, 63.0)" font-family=".AppleSystemUIFont" font-size="14">Load the custom
word list byHallilday </text>
		<arrow id="2" start="(208.7228049728048, 156.18997668997656)" end="(261.79972804972783, 189.26689976689966)" fill="#C1272D" />
		<text id="3" type="text/plain" rect="(35.63888888888869, 94.75641025641016, 191.23076923076928, 107.0)" font-family="MS Shell Dlg 2" font-size="16">Load the Dutch fairytales (not in tab format this time, but individual stories e.g., in word format)</text>
		<text id="4" type="text/plain" rect="(138.54166666666674, 20.577020202020208, 1128.0, 96.875)" font-family="MS Shell Dlg 2" font-size="16">We use a custom word list to make a radarplot based on Haliday's dimensions and for an individual character in a story (similar to figure 2 in Andrade and Andersen, 2020)</text>
		<text id="5" type="text/plain" rect="(331.875, 558.25, 138.75, 88.0)" font-family="MS Shell Dlg 2" font-size="16">get all the subject-verb-object combinations</text>
		<arrow id="6" start="(381.24999999999994, 551.375)" end="(415.0, 502.625)" fill="#C1272D" />
		<text id="7" type="text/plain" rect="(765.625, 685.125, 190.625, 69.0)" font-family="MS Shell Dlg 2" font-size="16">select rows with narrator (e.g,, subject = hij)</text>
		<arrow id="8" start="(799.3749999999999, 668.25)" end="(797.4999999999999, 615.75)" fill="#C1272D" />
		<text id="9" type="text/plain" rect="(498.75, 676.375, 143.75, 69.0)" font-family="MS Shell Dlg 2" font-size="16">clean subject and verbs from extensions</text>
		<arrow id="10" start="(571.875, 672.0)" end="(576.25, 625.125)" fill="#C1272D" />
		<text id="11" type="text/plain" rect="(1028.125, 522.25, 247.5, 126.0)" font-family="MS Shell Dlg 2" font-size="16">Get the Halliday categorization from the elements table and merge it with our subject-verb list: 'action' matches 'custom 'word'
</text>
		<arrow id="12" start="(1069.375, 516.375)" end="(1071.875, 445.125)" fill="#C1272D" />
		<arrow id="13" start="(1179.3749999999998, 268.25)" end="(1183.772727272727, 332.9545454545455)" fill="#C1272D" />
		<text id="14" type="text/plain" rect="(1140.625, 160.25, 112.5, 107.0)" font-family="MS Shell Dlg 2" font-size="16">remove irrelevant columns to enhance clarity</text>
		<text id="15" type="text/plain" rect="(1333.625, 490.125, 166.25, 88.0)" font-family="MS Shell Dlg 2" font-size="16">calculate frequencies of categories for each storyID </text>
		<arrow id="16" start="(1440.0, 479.5)" end="(1419.375, 437.625)" fill="#C1272D" />
		<arrow id="17" start="(1661.25, 527.0)" end="(1661.875, 438.875)" fill="#C1272D" />
		<text id="18" type="text/plain" rect="(1605.0, 535.75, 168.125, 69.0)" font-family="MS Shell Dlg 2" font-size="16">change variable type for plotting purposes</text>
		<arrow id="19" start="(1810.6250000000002, 502.625)" end="(1798.7500000000002, 433.875)" fill="#C1272D" />
		<text id="20" type="text/plain" rect="(1792.5, 512.625, 137.5, 50.0)" font-family="MS Shell Dlg 2" font-size="16">make radar plot</text>
		<arrow id="21" start="(1285.1136363636363, 157.90909090909088)" end="(1285.1136363636363, 224.78409090909088)" fill="#C1272D" />
		<text id="22" type="text/plain" rect="(1265.568181818182, 27.53409090909099, 260.75, 145.0)" font-family="MS Shell Dlg 2" font-size="16">look at the relevant data: this dataset only includes data for the subject of interest (e.g., the narrator) with Halliday categories attached to the verbs which are associated to the subject </text>
		<arrow id="23" start="(1146.7613636363635, 720.8636363636365)" end="(1081.1363636363635, 683.9886363636365)" fill="#C1272D" />
		<text id="24" type="text/plain" rect="(1134.090909090909, 730.068181818182, 136.875, 88.0)" font-family="MS Shell Dlg 2" font-size="16">verbs most frequently used by the narrator</text>
		<arrow id="25" start="(635.5454545454545, 362.81818181818176)" end="(579.1818181818181, 361.9090909090909)" fill="#C1272D" />
		<text id="26" type="text/plain" rect="(642.8181818181816, 316.4545454545455, 109.09090909090901, 96.0)" font-family="Segoe UI" font-size="16">Haliday categorizing words</text>
		<arrow id="27" start="(257.0, 509.0)" end="(394.0, 455.0)" fill="#C1272D" />
		<text id="28" type="text/plain" rect="(17.0, 517.0, 243.0, 75.0)" font-family="Segoe UI" font-size="16">This widget only accepts a corpus based on the import documents widget</text>
		<arrow id="29" start="(1524.0, 590.0)" end="(1524.0, 445.0)" fill="#C1272D" />
		<text id="30" type="text/plain" rect="(1447.0, 602.0, 200.0, 164.0)" font-family="Segoe UI" font-size="16">Select the storyID of interest, so that the analysis focuses on one story. The remainder of the widgets is based on your selection made here </text>
	</annotations>
	<thumbnail />
	<node_properties>
		<properties node_id="0" format="literal">{'autocommit': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o\x00\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o', '__version__': 2, 'context_settings': []}</properties>
		<properties node_id="1" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 1, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00F\x00\x00\x00\x1b\x00\x00\x03\x8c\x00\x00\x02\x1f\x00\x00\x00F\x00\x00\x00@\x00\x00\x03\x8c\x00\x00\x02\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00F\x00\x00\x00@\x00\x00\x03\x8c\x00\x00\x02\x1f', 'scriptLibrary': [{'name': 'radar plot', 'script': '\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nout_data = in_data\nout_learner = None\nout_classifier = None\nout_object = None\n\nif in_data is not None and len(in_data) == 3:  # Ensure we have exactly 3 rows\n    try:\n        # Extract \'category\' and \'freq-sum\' columns from the input data\n        categories = in_data.get_column(in_data.domain["category"])\n        freq_sum = in_data.get_column(in_data.domain["freq - Sum"])\n            \n        # Convert categories to string\n        categories = [str(cat) for cat in categories]\n            \n        # Number of categories\n        N = len(categories)\n            \n        # Compute the angles for the polar bars\n        angles = np.linspace(0, 2 * np.pi, N, endpoint=False)\n            \n        # Initialize polar bar plot\n        fig = plt.figure(figsize=(8,8))\n        ax = fig.add_subplot(111, polar=True)\n\n        # Plot bars on the polar plot\n        bars = ax.bar(angles, freq_sum, width=0.4, color=\'skyblue\', alpha=0.7)\n\n        # Set the category names as the x-ticks\n        ax.set_xticks(angles)\n        ax.set_xticklabels(categories)\n\n        # Optional: Customize y-axis labels or grid\n        ax.yaxis.grid(True)\n\n        # Display the polar bar plot\n        plt.show()\n\n    except KeyError as e:\n        print(f"Error: Column \'{e}\' not found in the data. Check the column names.")\n', 'filename': None}, {'name': 'removestrings', 'script': '\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nout_data = in_data\nout_learner = None\nout_classifier = None\nout_object = None\n\nif in_data is not None and len(in_data) == 3:  # Ensure we have exactly 3 rows\n    try:\n        # Extract \'category\' and \'freq-sum\' columns from the input data\n        categories = in_data.get_column(in_data.domain["category"])\n        freq_sum = in_data.get_column(in_data.domain["freq - Sum"])\n            \n        # Convert categories to string\n        categories = [str(cat) for cat in categories]\n            \n        # Number of categories\n        N = len(categories)\n            \n        # Compute the angles for the polar bars\n        angles = np.linspace(0, 2 * np.pi, N, endpoint=False)\n            \n        # Initialize polar bar plot\n        fig = plt.figure(figsize=(8,8))\n        ax = fig.add_subplot(111, polar=True)\n\n        # Plot bars on the polar plot\n        bars = ax.bar(angles, freq_sum, width=0.4, color=\'skyblue\', alpha=0.7)\n\n        # Set the category names as the x-ticks\n        ax.set_xticks(angles)\n        ax.set_xticklabels(categories)\n\n        # Optional: Customize y-axis labels or grid\n        ax.yaxis.grid(True)\n\n        # Display the polar bar plot\n        plt.show()\n\n    except KeyError as e:\n        print(f"Error: Column \'{e}\' not found in the data. Check the column names.")\n', 'filename': None}], 'scriptText': "from Orange.data import Table\n\n# Assuming 'in_data' is your Orange Table object\n\n# Extract the column indices for 'subject' and 'object'\nsubject_idx = in_data.domain.index('subject')\nobject_idx = in_data.domain.index('object')\n\n# Loop over the rows and replace the substrings for 'subject' and 'object' columns\nfor row in in_data:\n    if row[subject_idx] is not None:\n        row[subject_idx] = row[subject_idx].value.replace('_subj', '')  # Remove '_subj' from 'subject'\n    if row[object_idx] is not None:\n        row[object_idx] = row[object_idx].value.replace('_obj', '')      # Remove '_obj' from 'object'\n\n# Output modified data\nout_data = in_data\n", 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xaa\x00\x00\x00m\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="2" format="pickle">gASVDQIAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBBwdXJn
ZV9hdHRyaWJ1dGVzlImMDXB1cmdlX2NsYXNzZXOUiYwTc2F2ZWRXaWRnZXRHZW9tZXRyeZRDQgHZ
0MsAAwAAAAADwQAAAecAAAZAAAADxgAAA8EAAAHnAAAGQAAAA8YAAAAAAAAAAAoAAAADwQAAAecA
AAZAAAADxpSMEHVwZGF0ZV9vbl9jaGFuZ2WUiIwLX192ZXJzaW9uX1+USwKMEGNvbnRleHRfc2V0
dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1
ZXOUfZQojApjb25kaXRpb25zlF2UKIwHc3ViamVjdJRLA0sAjANoaWqUhZR0lGFoCEsCdYwKYXR0
cmlidXRlc5R9lIwIc3RvcnlfaWSUSwJzjAVtZXRhc5R9lCiMCHNlbnRlbmNllEsDjAdzdWJqZWN0
lEsDjAZhY3Rpb26USwOMBm9iamVjdJRLA3V1YmgNKYGUfZQoaBB9lCiMCmNvbmRpdGlvbnOUXZQo
jAdzdWJqZWN0lEsDSwCMA2hpapSFlHSUYWgISwJ1aBh9lChoGksCjAhTZWxlY3RlZJRLAXVoG32U
KGgdSwNoHksDaB9LA2ggSwN1dWJldS4=
</properties>
		<properties node_id="3" format="literal">{'auto_commit': True, 'color_by_class': False, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o\x00\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o', 'select_rows': True, 'show_attribute_labels': False, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="4" format="pickle">gASVqAgAAAAAAAB9lCiMCmF1dG9fYXBwbHmUiIwSY29udHJvbEFyZWFWaXNpYmxllIiMB21lcmdp
bmeUSwCME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAABFsAAAJaAAAGDQAAA14AAARb
AAACWgAABg0AAANeAAAAAAAAAAAKAAAABFsAAAJaAAAGDQAAA16UjAtfX3ZlcnNpb25fX5RLAowQ
Y29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SMB0NvbnRleHSUk5Qp
gZR9lCiMBnZhbHVlc5R9lCiMCmF0dHJfcGFpcnOUXZRdlCiMBmFjdGlvbpRLZ4aUjAtjdXN0b21f
d29yZJRLZ4aUZWFoBksCdYwKdmFyaWFibGVzMZR9lCiMCHN0b3J5X2lklEtmjAhzZW50ZW5jZZRL
Z4wHc3ViamVjdJRLZ2gTS2eMBm9iamVjdJRLZ3WMCnZhcmlhYmxlczKUfZQojAVpbmRleJRLZowH
c3RvcnlpZJRLZmgaS2eMCnRva2VuX3RleHSUS2eMD3Rva2VuX3N0YXJ0X2lkeJRLZowNdG9rZW5f
ZW5kX2lkeJRLZowTc3RvcnlfbmF2aWdhdG9yX3RhZ5RLZYwJc3BhY3lfdGFnlEtljBVzcGFjeV9m
aW5lZ3JhaW5lZF90YWeUS2WMEHNwYWN5X2RlcGVuZGVuY3mUS2WMCHNwYWN5X25llEtljAtzcGFj
eV9sZW1tYZRLZ4wPc3BhY3lfaGVhZF90ZXh0lEtnjA5zcGFjeV9oZWFkX2lkeJRLZowSaXNfcHJv
bm91bl9ib29sZWFulEtmjBtpc19zZW50ZW5jZV9zdWJqZWN0X2Jvb2xlYW6US2aMHGFjdGl2ZV92
b2ljZV9zdWJqZWN0X2Jvb2xlYW6US2aMEWFzc29jaWF0ZWRfYWN0aW9ulEtnjBVhc3NvY2lhdGVk
X2FjdGlvbl9pZHiUS2aMBXZvaWNllEtljAtmdXR1cmVfdmVyYpRLZYwLc2VudGVuY2VfaWSUS2aM
CnNlZ21lbnRfaWSUS2ZoFUtnjAVyZWFsbZRLZYwHcHJvY2Vzc5RLZYwGcHJvc3VilEtljANzdWKU
S2WMG2Fzc29jaWF0ZWRfYWN0aW9uX2xvd2VyY2FzZZRLZ4wEbGFuZ5RLZYwVbnVtX3dvcmRzX2lu
X3NlbnRlbmNllEtmdXViaAspgZR9lChoDn2UKGgQXZRdlCiMBmFjdGlvbpRLZ4aUjAtjdXN0b21f
d29yZJRLZ4aUZWFoBksCdWgXfZQojAhzdG9yeV9pZJRLZowIc2VudGVuY2WUS2eMB3N1YmplY3SU
S2doQUtnjAZvYmplY3SUS2d1aB19lCiMB3N0b3J5aWSUS2ZoR0tnjAp0b2tlbl90ZXh0lEtnjA90
b2tlbl9zdGFydF9pZHiUS2aMDXRva2VuX2VuZF9pZHiUS2aME3N0b3J5X25hdmlnYXRvcl90YWeU
S2WMCXNwYWN5X3RhZ5RLZYwVc3BhY3lfZmluZWdyYWluZWRfdGFnlEtljBBzcGFjeV9kZXBlbmRl
bmN5lEtljBJpc19wcm9ub3VuX2Jvb2xlYW6US2aMG2lzX3NlbnRlbmNlX3N1YmplY3RfYm9vbGVh
bpRLZowcYWN0aXZlX3ZvaWNlX3N1YmplY3RfYm9vbGVhbpRLZowRYXNzb2NpYXRlZF9hY3Rpb26U
S2eMC3NlbnRlbmNlX2lklEtmjApzZWdtZW50X2lklEtmaENLZ4wFcmVhbG2US2WMB3Byb2Nlc3OU
S2WMBnByb3N1YpRLZYwDc3VilEtljBthc3NvY2lhdGVkX2FjdGlvbl9sb3dlcmNhc2WUS2eMBGxh
bmeUS2WMFW51bV93b3Jkc19pbl9zZW50ZW5jZZRLZnV1YmgLKYGUfZQoaA59lChoEF2UXZQoaEFL
Z4aUaENLZ4aUZWFoBksCdWgXfZQoaEZLZowIU2VsZWN0ZWSUS2VoR0tnaEhLZ2hBS2doSUtndWgd
fZQoaEtLZmhHS2doTEtnaE1LZmhOS2ZoT0tlaFBLZWhRS2VoUktlaFNLZmhUS2ZoVUtmaFZLZ2hX
S2ZoWEtmaENLZ2hZS2VoWktlaFtLZWhcS2VoXUtnaF5LZWhfS2Z1dWJoCymBlH2UKGgOfZQoaBBd
lF2UKIwGYWN0aW9ulEtnhpSMC2N1c3RvbV93b3JklEtnhpRlYWgGSwJ1aBd9lCiMCHN0b3J5X2lk
lEtmjAhTZWxlY3RlZJRLZYwIc2VudGVuY2WUS2eMB3N1YmplY3SUS2dob0tnjAZvYmplY3SUS2eM
DFNlbGVjdGVkICgxKZRLZXVoHX2UKIwHc3RvcnlpZJRLZmh2S2WMCnRva2VuX3RleHSUS2eMD3Rv
a2VuX3N0YXJ0X2lkeJRLZowNdG9rZW5fZW5kX2lkeJRLZowTc3RvcnlfbmF2aWdhdG9yX3RhZ5RL
ZYwJc3BhY3lfdGFnlEtljBVzcGFjeV9maW5lZ3JhaW5lZF90YWeUS2WMEHNwYWN5X2RlcGVuZGVu
Y3mUS2WMCHNwYWN5X25llEtljBJpc19wcm9ub3VuX2Jvb2xlYW6US2aMG2lzX3NlbnRlbmNlX3N1
YmplY3RfYm9vbGVhbpRLZowcYWN0aXZlX3ZvaWNlX3N1YmplY3RfYm9vbGVhbpRLZowRYXNzb2Np
YXRlZF9hY3Rpb26US2eMC3NlbnRlbmNlX2lklEtmjApzZWdtZW50X2lklEtmjAtjdXN0b21fd29y
ZJRLZ4wFcmVhbG2US2WMB3Byb2Nlc3OUS2WMBnByb3N1YpRLZYwDc3VilEtljBthc3NvY2lhdGVk
X2FjdGlvbl9sb3dlcmNhc2WUS2eMBGxhbmeUS2WMFW51bV93b3Jkc19pbl9zZW50ZW5jZZRLZnV1
YmV1Lg==
</properties>
		<properties node_id="5" format="pickle">gASVTwcAAAAAAAB9lCiMCmF1dG9jb21taXSUiIwSY29udHJvbEFyZWFWaXNpYmxllIiME3NhdmVk
V2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAABcoAAAJxAAAG3wAABGQAAAXKAAACcQAABt8AAARk
AAAAAAAAAAAKAAAABcoAAAJxAAAG3wAABGSUjAp0aWVicmVha2VylIwNTGFzdCBpbnN0YW5jZZSM
C19fdmVyc2lvbl9flEsBjBBjb250ZXh0X3NldHRpbmdzlF2UKIwVb3Jhbmdld2lkZ2V0LnNldHRp
bmdzlIwHQ29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwNc2VsZWN0ZWRfdmFyc5RdlIwLY3Vz
dG9tX3dvcmSUS2eGlGFK/f///4aUaAdLAXWMCmF0dHJpYnV0ZXOUfZSMBW1ldGFzlH2UKIwFaW5k
ZXiUSwKMB3N0b3J5aWSUSwKMCHNlbnRlbmNllEsDjAp0b2tlbl90ZXh0lEsDjA90b2tlbl9zdGFy
dF9pZHiUSwKMDXRva2VuX2VuZF9pZHiUSwKME3N0b3J5X25hdmlnYXRvcl90YWeUSwGMCXNwYWN5
X3RhZ5RLAYwVc3BhY3lfZmluZWdyYWluZWRfdGFnlEsBjBBzcGFjeV9kZXBlbmRlbmN5lEsBjAhz
cGFjeV9uZZRLAYwLc3BhY3lfbGVtbWGUSwOMD3NwYWN5X2hlYWRfdGV4dJRLA4wOc3BhY3lfaGVh
ZF9pZHiUSwKMEmlzX3Byb25vdW5fYm9vbGVhbpRLAowbaXNfc2VudGVuY2Vfc3ViamVjdF9ib29s
ZWFulEsCjBxhY3RpdmVfdm9pY2Vfc3ViamVjdF9ib29sZWFulEsCjBFhc3NvY2lhdGVkX2FjdGlv
bpRLA4wVYXNzb2NpYXRlZF9hY3Rpb25faWR4lEsCjAV2b2ljZZRLAYwLZnV0dXJlX3ZlcmKUSwGM
C3NlbnRlbmNlX2lklEsCjApzZWdtZW50X2lklEsCaBNLA4wFcmVhbG2USwGMB3Byb2Nlc3OUSwGM
BnByb3N1YpRLAYwDc3VilEsBjBthc3NvY2lhdGVkX2FjdGlvbl9sb3dlcmNhc2WUSwOMBGxhbmeU
SwGMFW51bV93b3Jkc19pbl9zZW50ZW5jZZRLAnV1YmgMKYGUfZQoaA99lCiMDXNlbGVjdGVkX3Zh
cnOUXZSMC2N1c3RvbV93b3JklEtnhpRhSv3///+GlGgHSwF1aBZ9lGgYfZQojAdzdG9yeWlklEsC
jAhzZW50ZW5jZZRLA4wKdG9rZW5fdGV4dJRLA4wPdG9rZW5fc3RhcnRfaWR4lEsCjA10b2tlbl9l
bmRfaWR4lEsCjBNzdG9yeV9uYXZpZ2F0b3JfdGFnlEsBjAlzcGFjeV90YWeUSwGMFXNwYWN5X2Zp
bmVncmFpbmVkX3RhZ5RLAYwQc3BhY3lfZGVwZW5kZW5jeZRLAYwSaXNfcHJvbm91bl9ib29sZWFu
lEsCjBtpc19zZW50ZW5jZV9zdWJqZWN0X2Jvb2xlYW6USwKMHGFjdGl2ZV92b2ljZV9zdWJqZWN0
X2Jvb2xlYW6USwKMEWFzc29jaWF0ZWRfYWN0aW9ulEsDjAtzZW50ZW5jZV9pZJRLAowKc2VnbWVu
dF9pZJRLAmg9SwOMBXJlYWxtlEsBjAdwcm9jZXNzlEsBjAZwcm9zdWKUSwGMA3N1YpRLAYwbYXNz
b2NpYXRlZF9hY3Rpb25fbG93ZXJjYXNllEsDjARsYW5nlEsBjBVudW1fd29yZHNfaW5fc2VudGVu
Y2WUSwJ1dWJoDCmBlH2UKGgPfZQojA1zZWxlY3RlZF92YXJzlF2UjAtjdXN0b21fd29yZJRLZ4aU
YUr9////hpRoB0sBdWgWfZRoGH2UKIwHc3RvcnlpZJRLAowIc2VudGVuY2WUSwGMCnRva2VuX3Rl
eHSUSwOMD3Rva2VuX3N0YXJ0X2lkeJRLAowNdG9rZW5fZW5kX2lkeJRLAowTc3RvcnlfbmF2aWdh
dG9yX3RhZ5RLAYwJc3BhY3lfdGFnlEsBjBVzcGFjeV9maW5lZ3JhaW5lZF90YWeUSwGMEHNwYWN5
X2RlcGVuZGVuY3mUSwGMCHNwYWN5X25llEsBjBJpc19wcm9ub3VuX2Jvb2xlYW6USwKMG2lzX3Nl
bnRlbmNlX3N1YmplY3RfYm9vbGVhbpRLAowcYWN0aXZlX3ZvaWNlX3N1YmplY3RfYm9vbGVhbpRL
AowRYXNzb2NpYXRlZF9hY3Rpb26USwOMC3NlbnRlbmNlX2lklEsCjApzZWdtZW50X2lklEsCaF1L
A4wFcmVhbG2USwGMB3Byb2Nlc3OUSwGMBnByb3N1YpRLAYwDc3VilEsBjBthc3NvY2lhdGVkX2Fj
dGlvbl9sb3dlcmNhc2WUSwOMBGxhbmeUSwGMFW51bV93b3Jkc19pbl9zZW50ZW5jZZRLAnV1YmV1
Lg==
</properties>
		<properties node_id="6" format="pickle">gASV+hIAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNpZ25v
cmVfbmV3X2ZlYXR1cmVzlImME3NhdmVkV2lkZ2V0R2VvbWV0cnmUQ0IB2dDLAAMAAAAAA9MAAAFt
AAAGLAAAA+QAAAPUAAABjAAABisAAAPjAAAAAAAAAAAKAAAAA9QAAAGMAAAGKwAAA+OUjBJ1c2Vf
aW5wdXRfZmVhdHVyZXOUiYwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0dGluZ3OUXZQojBVv
cmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1ZXOUfZQojBFkb21h
aW5fcm9sZV9oaW50c5R9lCiMD3Rva2VuX3N0YXJ0X2lkeJRLAoaUjAlhdmFpbGFibGWUSwCGlIwN
dG9rZW5fZW5kX2lkeJRLAoaUaBVLAYaUjBVudW1fd29yZHNfaW5fc2VudGVuY2WUSwKGlGgVSwKG
lIwJc3BhY3lfdGFnlEsBhpRoFUsDhpSMFXNwYWN5X2ZpbmVncmFpbmVkX3RhZ5RLAYaUaBVLBIaU
jBBzcGFjeV9kZXBlbmRlbmN5lEsBhpRoFUsFhpSMEmlzX3Byb25vdW5fYm9vbGVhbpRLAoaUaBVL
BoaUjBtpc19zZW50ZW5jZV9zdWJqZWN0X2Jvb2xlYW6USwKGlGgVSweGlIwcYWN0aXZlX3ZvaWNl
X3N1YmplY3RfYm9vbGVhbpRLAoaUaBVLCIaUjAtzZW50ZW5jZV9pZJRLAoaUaBVLCYaUjApzZWdt
ZW50X2lklEsChpRoFUsKhpSMBGxhbmeUSwGGlGgVSwuGlIwRYXNzb2NpYXRlZF9hY3Rpb26USwOG
lGgVSwyGlIwbYXNzb2NpYXRlZF9hY3Rpb25fbG93ZXJjYXNllEsDhpRoFUsNhpSMB3N0b3J5aWSU
SwKGlGgVSw6GlIwMc2VudGVuY2UgKDEplEsDhpRoFUsPhpSMBm9iamVjdJRLA4aUaBVLEIaUjAp0
b2tlbl90ZXh0lEsDhpRoFUsRhpSME3N0b3J5X25hdmlnYXRvcl90YWeUSwGGlGgVSxKGlIwIc3Rv
cnlfaWSUSwKGlIwJYXR0cmlidXRllEsAhpSMB3N1YmplY3SUSwOGlIwEbWV0YZRLAIaUjAZhY3Rp
b26USwOGlGhTSwGGlIwFcmVhbG2USwGGlGhTSwKGlIwHcHJvY2Vzc5RLAYaUaFNLA4aUjAVpbmRl
eJRLAoaUaFNLBIaUjAZwcm9zdWKUSwGGlGhTSwWGlIwMc2VudGVuY2UgKDIplEsDhpRoU0sGhpSM
A3N1YpRLAYaUaFNLB4aUjAhzcGFjeV9uZZRLAYaUaFNLCIaUjAtzcGFjeV9sZW1tYZRLA4aUaFNL
CYaUjA9zcGFjeV9oZWFkX3RleHSUSwOGlGhTSwqGlIwOc3BhY3lfaGVhZF9pZHiUSwKGlGhTSwuG
lIwVYXNzb2NpYXRlZF9hY3Rpb25faWR4lEsChpRoU0sMhpSMBXZvaWNllEsBhpRoU0sNhpSMC2Z1
dHVyZV92ZXJilEsBhpRoU0sOhpR1Sv7///+GlGgHSwF1jAphdHRyaWJ1dGVzlH2UaE1LAnOMBW1l
dGFzlH2UKGhBSwNoUUsDaFVLA2hESwNoXksCaD5LAmhkSwNoR0sDaBNLAmgXSwJoSksBaB1LAWgg
SwFoI0sBaGpLAWhtSwNocEsDaHNLAmgmSwJoKUsCaCxLAmg4SwNodksCaHlLAWh8SwFoL0sCaDJL
AmhYSwFoW0sBaGFLAWhnSwFoO0sDaDVLAWgaSwJ1dWJoDCmBlH2UKGgPfZQojBFkb21haW5fcm9s
ZV9oaW50c5R9lCiMD3Rva2VuX3N0YXJ0X2lkeJRLAoaUjAlhdmFpbGFibGWUSwCGlIwNdG9rZW5f
ZW5kX2lkeJRLAoaUaItLAYaUjBVudW1fd29yZHNfaW5fc2VudGVuY2WUSwKGlGiLSwKGlIwJc3Bh
Y3lfdGFnlEsBhpRoi0sDhpSMFXNwYWN5X2ZpbmVncmFpbmVkX3RhZ5RLAYaUaItLBIaUjBBzcGFj
eV9kZXBlbmRlbmN5lEsBhpRoi0sFhpSMEmlzX3Byb25vdW5fYm9vbGVhbpRLAoaUaItLBoaUjBtp
c19zZW50ZW5jZV9zdWJqZWN0X2Jvb2xlYW6USwKGlGiLSweGlIwcYWN0aXZlX3ZvaWNlX3N1Ympl
Y3RfYm9vbGVhbpRLAoaUaItLCIaUjAtzZW50ZW5jZV9pZJRLAoaUaItLCYaUjApzZWdtZW50X2lk
lEsChpRoi0sKhpSMBGxhbmeUSwGGlGiLSwuGlIwRYXNzb2NpYXRlZF9hY3Rpb26USwOGlGiLSwyG
lIwbYXNzb2NpYXRlZF9hY3Rpb25fbG93ZXJjYXNllEsDhpRoi0sNhpSMB3N0b3J5aWSUSwKGlGiL
Sw6GlIwMc2VudGVuY2UgKDEplEsDhpRoi0sPhpSMBm9iamVjdJRLA4aUaItLEIaUjAp0b2tlbl90
ZXh0lEsDhpRoi0sRhpSME3N0b3J5X25hdmlnYXRvcl90YWeUSwGGlGiLSxKGlIwIc3RvcnlfaWSU
SwKGlIwJYXR0cmlidXRllEsAhpSMB3N1YmplY3SUSwOGlIwEbWV0YZRLAIaUjAZhY3Rpb26USwOG
lGjJSwGGlIwFcmVhbG2USwGGlGjJSwKGlIwHcHJvY2Vzc5RLAYaUaMlLA4aUjAZwcm9zdWKUSwGG
lGjJSwSGlIwMc2VudGVuY2UgKDIplEsDhpRoyUsFhpSMA3N1YpRLAYaUaMlLBoaUdUr+////hpRo
B0sBdWiAfZRow0sCc2iCfZQoaLdLA2jHSwNoy0sDaLpLA2i0SwJo10sDaL1LA2iJSwJojUsCaMBL
AWiTSwFolksBaJlLAWicSwJon0sCaKJLAmiuSwNopUsCaKhLAmjOSwFo0UsBaNRLAWjaSwFosUsD
aKtLAWiQSwJ1dWJoDCmBlH2UKGgPfZQoaId9lChoiUsChpRoi0sAhpRojUsChpRoi0sBhpRokEsC
hpRoi0sChpRok0sBhpRoi0sDhpRolksBhpRoi0sEhpRomUsBhpRoi0sFhpRonEsChpRoi0sGhpRo
n0sChpRoi0sHhpRooksChpRoi0sIhpRopUsChpRoi0sJhpRoqEsChpRoi0sKhpRoq0sBhpRoi0sL
hpRorksDhpRoi0sMhpRosUsDhpRoi0sNhpRotEsChpRoi0sOhpSMDHNlbnRlbmNlICgxKZRLA4aU
aItLD4aUjAhTZWxlY3RlZJRLAYaUaItLEIaUaLpLA4aUaItLEYaUaL1LA4aUaItLEoaUaMBLAYaU
aItLE4aUaMNLAoaUaMVLAIaUaMdLA4aUaMlLAIaUaMtLA4aUaMlLAYaUaM5LAYaUaMlLAoaUaNFL
AYaUaMlLA4aUaNRLAYaUaMlLBIaUjAxzZW50ZW5jZSAoMimUSwOGlGjJSwWGlGjaSwGGlGjJSwaG
lHVK/v///4aUaAdLAXVogH2UKGjDSwJqBQEAAEsBdWiCfZQojAxzZW50ZW5jZSAoMSmUSwNox0sD
aMtLA2i6SwNotEsCjAxzZW50ZW5jZSAoMimUSwNovUsDaIlLAmiNSwJowEsBaJNLAWiWSwFomUsB
aJxLAmifSwJooksCaK5LA2ilSwJoqEsCaM5LAWjRSwFo1EsBaNpLAWixSwNoq0sBaJBLAnV1YmgM
KYGUfZQoaA99lCiMEWRvbWFpbl9yb2xlX2hpbnRzlH2UKIwPdG9rZW5fc3RhcnRfaWR4lEsChpSM
CWF2YWlsYWJsZZRLAIaUjA10b2tlbl9lbmRfaWR4lEsChpRqKwEAAEsBhpSMFW51bV93b3Jkc19p
bl9zZW50ZW5jZZRLAoaUaisBAABLAoaUjAlzcGFjeV90YWeUSwGGlGorAQAASwOGlIwVc3BhY3lf
ZmluZWdyYWluZWRfdGFnlEsBhpRqKwEAAEsEhpSMEHNwYWN5X2RlcGVuZGVuY3mUSwGGlGorAQAA
SwWGlIwSaXNfcHJvbm91bl9ib29sZWFulEsChpRqKwEAAEsGhpSMG2lzX3NlbnRlbmNlX3N1Ympl
Y3RfYm9vbGVhbpRLAoaUaisBAABLB4aUjBxhY3RpdmVfdm9pY2Vfc3ViamVjdF9ib29sZWFulEsC
hpRqKwEAAEsIhpSMC3NlbnRlbmNlX2lklEsChpRqKwEAAEsJhpSMCnNlZ21lbnRfaWSUSwKGlGor
AQAASwqGlIwEbGFuZ5RLAYaUaisBAABLC4aUjBFhc3NvY2lhdGVkX2FjdGlvbpRLA4aUaisBAABL
DIaUjBthc3NvY2lhdGVkX2FjdGlvbl9sb3dlcmNhc2WUSwOGlGorAQAASw2GlIwHc3RvcnlpZJRL
AoaUaisBAABLDoaUjAxzZW50ZW5jZSAoMimUSwGGlGorAQAASw+GlIwMU2VsZWN0ZWQgKDEplEsB
hpRqKwEAAEsQhpSMDHNlbnRlbmNlICgxKZRLA4aUaisBAABLEYaUjAhzcGFjeV9uZZRLAYaUaisB
AABLEoaUjAhTZWxlY3RlZJRLAYaUaisBAABLE4aUjAZvYmplY3SUSwOGlGorAQAASxSGlIwKdG9r
ZW5fdGV4dJRLA4aUaisBAABLFYaUjBNzdG9yeV9uYXZpZ2F0b3JfdGFnlEsBhpRqKwEAAEsWhpSM
CHN0b3J5X2lklEsChpSMCWF0dHJpYnV0ZZRLAIaUjAdzdWJqZWN0lEsDhpSMBG1ldGGUSwCGlIwG
YWN0aW9ulEsDhpRqdQEAAEsBhpSMBXJlYWxtlEsBhpRqdQEAAEsChpSMB3Byb2Nlc3OUSwGGlGp1
AQAASwOGlIwGcHJvc3VilEsBhpRqdQEAAEsEhpSMA3N1YpRLAYaUanUBAABLBYaUdUr+////hpRo
B0sBdWiAfZQoam8BAABLAmpjAQAASwF1aIJ9lCiMDHNlbnRlbmNlICgxKZRLA2pzAQAASwNqdwEA
AEsDamYBAABLA4wMU2VsZWN0ZWQgKDEplEsBalQBAABLAowMc2VudGVuY2UgKDIplEsBamkBAABL
A2opAQAASwJqLQEAAEsCamwBAABLAWozAQAASwFqNgEAAEsBajkBAABLAWpgAQAASwFqPAEAAEsC
aj8BAABLAmpCAQAASwJqTgEAAEsDakUBAABLAmpIAQAASwJqegEAAEsBan0BAABLAWqAAQAASwFq
gwEAAEsBalEBAABLA2pLAQAASwFqMAEAAEsCdXViaAwpgZR9lChoD32UKGonAQAAfZQoaikBAABL
AoaUaisBAABLAIaUai0BAABLAoaUaisBAABLAYaUajABAABLAoaUaisBAABLAoaUajMBAABLAYaU
aisBAABLA4aUajYBAABLAYaUaisBAABLBIaUajkBAABLAYaUaisBAABLBYaUajwBAABLAoaUaisB
AABLBoaUaj8BAABLAoaUaisBAABLB4aUakIBAABLAoaUaisBAABLCIaUakUBAABLAoaUaisBAABL
CYaUakgBAABLAoaUaisBAABLCoaUaksBAABLAYaUaisBAABLC4aUak4BAABLA4aUaisBAABLDIaU
alEBAABLA4aUaisBAABLDYaUalQBAABLAoaUaisBAABLDoaUalcBAABLAYaUaisBAABLD4aUaloB
AABLAYaUaisBAABLEIaUal0BAABLA4aUaisBAABLEYaUamABAABLAYaUaisBAABLEoaUam8BAABL
AoaUanEBAABLAIaUamwBAABLAYaUanEBAABLAYaUamMBAABLAYaUjAVjbGFzc5RLAIaUamkBAABL
A4aUanUBAABLAIaUanMBAABLA4aUanUBAABLAYaUancBAABLA4aUanUBAABLAoaUamYBAABLA4aU
anUBAABLA4aUanoBAABLAYaUanUBAABLBIaUan0BAABLAYaUanUBAABLBYaUaoABAABLAYaUanUB
AABLBoaUaoMBAABLAYaUanUBAABLB4aUjAxTZWxlY3RlZCAoMimUSwGGlGp1AQAASwiGlHVK/v//
/4aUaAdLAXVogH2UKGpvAQAASwJqYwEAAEsBdWiCfZQoaokBAABLA2pzAQAASwNqdwEAAEsDamYB
AABLA2qKAQAASwFqVAEAAEsCaosBAABLAWppAQAASwNqKQEAAEsCai0BAABLAmpsAQAASwFqMwEA
AEsBajYBAABLAWo5AQAASwFqYAEAAEsBajwBAABLAmo/AQAASwJqQgEAAEsCak4BAABLA2pFAQAA
SwJqSAEAAEsCanoBAABLAWp9AQAASwFqgAEAAEsBaoMBAABLAWpRAQAASwNqSwEAAEsBajABAABL
AowMU2VsZWN0ZWQgKDIplEsBdXViZXUu
</properties>
		<properties node_id="7" format="literal">{'auto_commit': True, 'color_by_class': False, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00F\x00\x00\x00\x1b\x00\x00\x06\xe5\x00\x00\x02\x1f\x00\x00\x00F\x00\x00\x00@\x00\x00\x06\xe5\x00\x00\x02\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00F\x00\x00\x00@\x00\x00\x06\xe5\x00\x00\x02\x1f', 'select_rows': True, 'show_attribute_labels': False, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="8" format="pickle">gASVIgoAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBNzYXZl
ZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAAPBAAAB5wAABkMAAAPGAAADwQAAAecAAAZDAAAD
xgAAAAAAAAAACgAAAAPBAAAB5wAABkMAAAPGlIwLX192ZXJzaW9uX1+USwGMEGNvbnRleHRfc2V0
dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1
ZXOUfZQojAxhZ2dyZWdhdGlvbnOUfZQojAhzdG9yeV9pZJRLZoaUj5SMB3N1YmplY3SUS2eGlI+U
jAZhY3Rpb26US2eGlI+UjAVyZWFsbZRLZYaUj5SMB3Byb2Nlc3OUS2WGlI+UKIwFQ291bnSUkIwG
cHJvc3VilEtlhpSPlIwDc3VilEtlhpSPlIwMc2VudGVuY2UgKDIplEtnhpSPlCiMC0NvbmNhdGVu
YXRllJCMBWluZGV4lEtmhpSPlCiMBE1lYW6UkIwIc3BhY3lfbmWUS2WGlI+UKIwETW9kZZSQjAtz
cGFjeV9sZW1tYZRLZ4aUj5QojAtDb25jYXRlbmF0ZZSQjA9zcGFjeV9oZWFkX3RleHSUS2eGlI+U
KGg2kIwOc3BhY3lfaGVhZF9pZHiUS2aGlI+UKGgukIwVYXNzb2NpYXRlZF9hY3Rpb25faWR4lEtm
hpSPlChoLpCMBXZvaWNllEtlhpSPlChoMpCMC2Z1dHVyZV92ZXJilEtlhpSPlChoMpB1Svz///+G
lIwIZ2JfYXR0cnOUXZQoaBFLZoaUaB1LZYaUZUr9////hpRoBUsBdYwKYXR0cmlidXRlc5R9lGgR
SwJzjAVtZXRhc5R9lChoFEsDaBdLA2gaSwFoHUsBaCtLAmghSwFoJ0sDaCRLAWgvSwFoM0sDaDdL
A2g6SwJoPUsCaEBLAWhDSwF1dWJoCimBlH2UKGgNfZQojAxhZ2dyZWdhdGlvbnOUfZQojAhzdG9y
eV9pZJRLZoaUj5SMB3N1YmplY3SUS2eGlI+UjAZhY3Rpb26US2eGlI+UjAVyZWFsbZRLZYaUj5SM
B3Byb2Nlc3OUS2WGlI+UKGggkIwGcHJvc3VilEtlhpSPlIwDc3VilEtlhpSPlIwMc2VudGVuY2Ug
KDIplEtnhpSPlChoKpB1Svz///+GlIwIZ2JfYXR0cnOUXZQoaFVLZoaUaGFLZYaUZUr9////hpRo
BUsBdWhMfZRoVUsCc2hOfZQoaFhLA2hbSwNoXksBaGFLAWhkSwGMDHNlbnRlbmNlICgyKZRLA2hn
SwF1dWJoCimBlH2UKGgNfZQojAxhZ2dyZWdhdGlvbnOUfZQojAhzdG9yeV9pZJRLZoaUj5SMB3N1
YmplY3SUS2eGlI+UjAZhY3Rpb26US2eGlI+UjAVyZWFsbZRLZYaUj5SMB3Byb2Nlc3OUS2WGlI+U
KGggkIwGcHJvc3VilEtlhpSPlIwDc3VilEtlhpSPlHVK/P///4aUjAhnYl9hdHRyc5RdlChoe0tm
hpRoh0tlhpRlSv3///+GlGgFSwF1aEx9lGh7SwJzaE59lChofksDaIFLA2iESwFoh0sBaIpLAWiN
SwF1dWJoCimBlH2UKGgNfZQoaHl9lChoe0tmhpSPlGh+S2eGlI+UaIFLZ4aUj5RohEtlhpSPlGiH
S2WGlI+UKGggkGiKS2WGlI+UaI1LZYaUj5SMCFNlbGVjdGVklEtlhpSPlHVK/P///4aUaJFdlCho
e0tmhpRoh0tlhpRlSv3///+GlGgFSwF1aEx9lChoe0sCaKpLAXVoTn2UKGh+SwNogUsDaIRLAWiH
SwFoiksBaI1LAXV1YmgKKYGUfZQoaA19lChoeX2UKGh7S2aGlI+UKIwETWVhbpSQjBNzdG9yeV9u
YXZpZ2F0b3JfdGFnlEtlhpSPlCiMBE1vZGWUkGh+S2eGlI+UKIwLQ29uY2F0ZW5hdGWUkGiBS2eG
lI+UKGjBkGiES2WGlI+UKGi+kGiHS2WGlI+UKGi+kGiKS2WGlI+UKGi+kGiNS2WGlI+UKGi+kHVK
/P///4aUaJFdlGh+S2eGlGFK/f///4aUaAVLAXVoTH2UKGh7SwJou0sBdWhOfZQoaH5LA2iBSwNo
hEsBaIdLAWiKSwFojUsBdXViaAopgZR9lChoDX2UKGh5fZQoaHtLZoaUj5QoaLqQaLtLZYaUj5Qo
aL6QjAp0b2tlbl90ZXh0lEtnhpSPlChowZBofktnhpSPlChowZBogUtnhpSPlChowZBohEtlhpSP
lChovpBoh0tlhpSPlChovpBoiktlhpSPlChovpBojUtlhpSPlChovpB1Svz///+GlGiRXZRo2ktn
hpRhSv3///+GlGgFSwF1aEx9lChoe0sCaLtLAXVoTn2UKGjaSwNofksDaIFLA2iESwFoh0sBaIpL
AWiNSwF1dWJoCimBlH2UKGgNfZQoaHl9lChoe0tmhpSPlChoupBou0tlhpSPlChovpBo2ktnhpSP
lChowZBofktnhpSPlChowZBogUtnhpSPlChowZCMBm9iamVjdJRLZ4aUj5QoaMGQaIRLZYaUj5Qo
aL6QaIdLZYaUj5QoaL6QaIpLZYaUj5QoaL6QaI1LZYaUj5QoaL6QdUr8////hpRokV2UaNpLZ4aU
YUr9////hpRoBUsBdWhMfZQoaHtLAmi7SwF1aE59lCho2ksDaH5LA2iBSwNo/UsDaIRLAWiHSwFo
iksBaI1LAXV1YmgKKYGUfZQoaA19lChoeX2UKGh7S2aGlI+UKGi6kGi7S2WGlI+UKGi+kGiqS2WG
lI+UKGi+kGjaS2eGlI+UKGjBkGh+S2eGlI+UKGjBkGiBS2eGlI+UKGjBkGj9S2eGlI+UKGjBkGiE
S2WGlI+UKGi+kGiHS2WGlI+UKGi+kGiKS2WGlI+UKGi+kGiNS2WGlI+UKGi+kHVK/P///4aUaJFd
lGiqS2WGlGFK/f///4aUaAVLAXVoTH2UKGh7SwJou0sBaKpLAXVoTn2UKGjaSwNofksDaIFLA2j9
SwNohEsBaIdLAWiKSwFojUsBdXViaAopgZR9lChoDX2UKGh5fZQoaHtLZoaUj5Rou0tlhpSPlGiq
S2WGlI+UaNpLZ4aUj5RofktnhpSPlGiBS2eGlI+UaP1LZ4aUj5RohEtlhpSPlGiHS2WGlI+UaIpL
ZYaUj5RojUtlhpSPlChoIJCMDFNlbGVjdGVkICgyKZRLZYaUj5R1Svz///+GlGiRXZQoaHtLZoaU
aI1LZYaUZUr9////hpRoBUsBdWhMfZQoaHtLAmi7SwFoqksBdWhOfZQoaNpLA2h+SwNogUsDaP1L
A2iESwFoh0sBaIpLAWiNSwGMDFNlbGVjdGVkICgyKZRLAXV1YmV1Lg==
</properties>
		<properties node_id="9" format="literal">{'auto_commit': True, 'color_by_class': False, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00F\x00\x00\x00\x1b\x00\x00\x06\x89\x00\x00\x02\x1f\x00\x00\x00F\x00\x00\x00@\x00\x00\x06\x89\x00\x00\x02\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00F\x00\x00\x00@\x00\x00\x06\x89\x00\x00\x02\x1f', 'select_rows': True, 'show_attribute_labels': False, 'show_distributions': False, 'stored_selection': {'rows': [28, 29, 30], 'columns': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="10" format="literal">{'controlAreaVisible': True, 'currentScriptIndex': 0, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00F\x00\x00\x00\x1b\x00\x00\x03\x8c\x00\x00\x02\x1f\x00\x00\x00F\x00\x00\x00@\x00\x00\x03\x8c\x00\x00\x02\x1f\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x00F\x00\x00\x00@\x00\x00\x03\x8c\x00\x00\x02\x1f', 'scriptLibrary': [{'name': 'radar plot', 'script': '\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nout_data = in_data\nout_learner = None\nout_classifier = None\nout_object = None\n\nif in_data is not None and len(in_data) == 3:  # Ensure we have exactly 3 rows\n    try:\n        # Extract \'category\' and \'freq-sum\' columns from the input data\n        categories = in_data.get_column(in_data.domain["process"])\n        freq_sum = in_data.get_column(in_data.domain["process - Count"])\n            \n        # Convert categories to string\n        categories = [str(cat) for cat in categories]\n            \n        # Number of categories\n        N = len(categories)\n            \n        # Compute the angles for the polar bars\n        angles = np.linspace(0, 2 * np.pi, N, endpoint=False)\n            \n        # Initialize polar bar plot\n        fig = plt.figure(figsize=(8,8))\n        ax = fig.add_subplot(111, polar=True)\n\n        # Plot bars on the polar plot\n        bars = ax.bar(angles, freq_sum, width=0.4, color=\'skyblue\', alpha=0.7)\n\n        # Set the category names as the x-ticks\n        ax.set_xticks(angles)\n        ax.set_xticklabels(categories)\n\n        # Optional: Customize y-axis labels or grid\n        ax.yaxis.grid(True)\n\n        # Display the polar bar plot\n        plt.show()\n\n    except KeyError as e:\n        print(f"Error: Column \'{e}\' not found in the data. Check the column names.")\n', 'filename': None}], 'scriptText': '\nimport matplotlib.pyplot as plt\nimport numpy as np\n\nout_data = in_data\nout_learner = None\nout_classifier = None\nout_object = None\n\nif in_data is not None and len(in_data) == 3:  # Ensure we have exactly 3 rows\n    try:\n        # Extract \'category\' and \'freq-sum\' columns from the input data\n        categories = in_data.get_column(in_data.domain["process"])\n        freq_sum = in_data.get_column(in_data.domain["process - Count"])\n            \n        # Convert categories to string\n        categories = [str(cat) for cat in categories]\n            \n        # Number of categories\n        N = len(categories)\n            \n        # Compute the angles for the polar bars\n        angles = np.linspace(0, 2 * np.pi, N, endpoint=False)\n            \n        # Initialize polar bar plot\n        fig = plt.figure(figsize=(8,8))\n        ax = fig.add_subplot(111, polar=True)\n\n        # Plot bars on the polar plot\n        bars = ax.bar(angles, freq_sum, width=0.4, color=\'skyblue\', alpha=0.7)\n\n        # Set the category names as the x-ticks\n        ax.set_xticks(angles)\n        ax.set_xticklabels(categories)\n\n        # Optional: Customize y-axis labels or grid\n        ax.yaxis.grid(True)\n\n        # Display the polar bar plot\n        plt.show()\n\n    except KeyError as e:\n        print(f"Error: Column \'{e}\' not found in the data. Check the column names.")\n', 'splitterState': b'\x00\x00\x00\xff\x00\x00\x00\x01\x00\x00\x00\x02\x00\x00\x00\xaa\x00\x00\x00m\x01\xff\xff\xff\xff\x01\x00\x00\x00\x02\x00', 'vimModeEnabled': False, '__version__': 2}</properties>
		<properties node_id="11" format="pickle">gASVOQIAAAAAAAB9lCiMFF9kb21haW5fY2hhbmdlX2hpbnRzlH2UKIwLQ2F0ZWdvcmljYWyUjANz
dWKUKIwNQWN0cyB2ZXJiYWxseZSMD0JvZGlseSBwb3N0dXJlc5SMDkNpcmN1bXN0YW50aWFslIwJ
Q29nbml0aXZllIwIQ3JlYXRpdmWUjAxEZXNpZGVyYXRpdmWUjAtEaXNwb3NpdGl2ZZSMB0Vtb3Rp
dmWUjAtFeGlzdGVudGlhbJSMCUludGVuc2l2ZZSMC1BlcnNwZWN0aXZllIwNUGh5c2lvbG9naWNh
bJSMClBvc3Nlc3NpdmWUjApWZXJiYWwgYWN0lHSUKYeUhpRdlIwIQXNTdHJpbmeUKYaUYYwLQ2F0
ZWdvcmljYWyUjAdwcm9jZXNzlCiMCkJlaGF2aW9yYWyUjAtFeGlzdGVudGlhbJSMCE1hdGVyaWFs
lIwGTWVudGFslIwKUmVsYXRpb25hbJSMBlZlcmJhbJR0lCmHlIaUXZSMCEFzU3RyaW5nlCmGlGF1
jBZfbWVyZ2VfZGlhbG9nX3NldHRpbmdzlH2UjBJjb250cm9sQXJlYVZpc2libGWUiIwRb3V0cHV0
X3RhYmxlX25hbWWUjACUjBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAABGAAAAGwAA
AsUAAAIfAAAARgAAAEAAAALFAAACHwAAAAAAAAAAB4AAAABGAAAAQAAAAsUAAAIflIwLX192ZXJz
aW9uX1+USwR1Lg==
</properties>
		<properties node_id="12" format="literal">{'autocommit': True, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x02]\x00\x00\x01\x1e\x00\x00\x04\xdc\x00\x00\x02\xfd\x00\x00\x02]\x00\x00\x01\x1e\x00\x00\x04\xdc\x00\x00\x02\xfd\x00\x00\x00\x00\x00\x00\x00\x00\x07\x80\x00\x00\x02]\x00\x00\x01\x1e\x00\x00\x04\xdc\x00\x00\x02\xfd', 'use_infinitives': False, '__version__': 2, 'context_settings': []}</properties>
		<properties node_id="13" format="pickle">gASVowUAAAAAAAB9lCiMC2F1dG9fY29tbWl0lIiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjBBwdXJn
ZV9hdHRyaWJ1dGVzlImMDXB1cmdlX2NsYXNzZXOUiYwTc2F2ZWRXaWRnZXRHZW9tZXRyeZRDQgHZ
0MsAAwAAAAADwQAAAecAAAZAAAADxgAAA8EAAAHnAAAGQAAAA8YAAAAAAAAAAAoAAAADwQAAAecA
AAZAAAADxpSMEHVwZGF0ZV9vbl9jaGFuZ2WUiIwLX192ZXJzaW9uX1+USwKMEGNvbnRleHRfc2V0
dGluZ3OUXZQojBVvcmFuZ2V3aWRnZXQuc2V0dGluZ3OUjAdDb250ZXh0lJOUKYGUfZQojAZ2YWx1
ZXOUfZQojApjb25kaXRpb25zlF2UKIwFcmVhbG2USwFLAl2UKIwFQmVpbmeUjAVEb2luZ5SMB1Nl
bnNpbmeUZXSUYWgISwJ1jAphdHRyaWJ1dGVzlH2UjAVtZXRhc5R9lCiMBWluZGV4lEsCjAdzdG9y
eWlklEsCjAhzZW50ZW5jZZRLA4wKdG9rZW5fdGV4dJRLA4wPdG9rZW5fc3RhcnRfaWR4lEsCjA10
b2tlbl9lbmRfaWR4lEsCjBNzdG9yeV9uYXZpZ2F0b3JfdGFnlEsBjAlzcGFjeV90YWeUSwGMFXNw
YWN5X2ZpbmVncmFpbmVkX3RhZ5RLAYwQc3BhY3lfZGVwZW5kZW5jeZRLAYwIc3BhY3lfbmWUSwGM
C3NwYWN5X2xlbW1hlEsDjA9zcGFjeV9oZWFkX3RleHSUSwOMDnNwYWN5X2hlYWRfaWR4lEsCjBJp
c19wcm9ub3VuX2Jvb2xlYW6USwKMG2lzX3NlbnRlbmNlX3N1YmplY3RfYm9vbGVhbpRLAowcYWN0
aXZlX3ZvaWNlX3N1YmplY3RfYm9vbGVhbpRLAowRYXNzb2NpYXRlZF9hY3Rpb26USwOMFWFzc29j
aWF0ZWRfYWN0aW9uX2lkeJRLAowFdm9pY2WUSwGMC2Z1dHVyZV92ZXJilEsBjAtzZW50ZW5jZV9p
ZJRLAowKc2VnbWVudF9pZJRLAowLY3VzdG9tX3dvcmSUSwNoFEsBjAdwcm9jZXNzlEsBjAZwcm9z
dWKUSwGMA3N1YpRLAYwbYXNzb2NpYXRlZF9hY3Rpb25fbG93ZXJjYXNllEsDjARsYW5nlEsBjBVu
dW1fd29yZHNfaW5fc2VudGVuY2WUSwJ1dWJoDSmBlH2UKGgQfZQojApjb25kaXRpb25zlF2UKIwF
cmVhbG2USwFLAl2UKIwFQmVpbmeUjAVEb2luZ5SMB1NlbnNpbmeUZXSUYWgISwJ1aBp9lGgcfZQo
jAdzdG9yeWlklEsCjAhzZW50ZW5jZZRLA4wKdG9rZW5fdGV4dJRLA4wPdG9rZW5fc3RhcnRfaWR4
lEsCjA10b2tlbl9lbmRfaWR4lEsCjBNzdG9yeV9uYXZpZ2F0b3JfdGFnlEsBjAlzcGFjeV90YWeU
SwGMFXNwYWN5X2ZpbmVncmFpbmVkX3RhZ5RLAYwQc3BhY3lfZGVwZW5kZW5jeZRLAYwSaXNfcHJv
bm91bl9ib29sZWFulEsCjBtpc19zZW50ZW5jZV9zdWJqZWN0X2Jvb2xlYW6USwKMHGFjdGl2ZV92
b2ljZV9zdWJqZWN0X2Jvb2xlYW6USwKMEWFzc29jaWF0ZWRfYWN0aW9ulEsDjAtzZW50ZW5jZV9p
ZJRLAowKc2VnbWVudF9pZJRLAowLY3VzdG9tX3dvcmSUSwNoQUsBjAdwcm9jZXNzlEsBjAZwcm9z
dWKUSwGMA3N1YpRLAYwbYXNzb2NpYXRlZF9hY3Rpb25fbG93ZXJjYXNllEsDjARsYW5nlEsBjBVu
dW1fd29yZHNfaW5fc2VudGVuY2WUSwJ1dWJldS4=
</properties>
		<properties node_id="14" format="pickle">gASVwAsAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAxyZWNlbnRfcGF0aHOUXZQojB5v
cmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxvZ3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNw
YXRolIyEL2hvbWUvZXJpa3QvcHJvamVjdHMvbmF2aWdhdGluZ3N0b3JpZXMvb3JhbmdlLXN0b3J5
LW5hdmlnYXRvci9vcmFuZ2Vjb250cmliL3N0b3J5bmF2aWdhdGlvbi9yZXNvdXJjZXMvZHV0Y2hf
aGFsbGlkYXlfYWN0aW9uX2xpc3QuY3N2lIwGcHJlZml4lE6MB3JlbHBhdGiUTowFdGl0bGWUjACU
jAVzaGVldJRoDowLZmlsZV9mb3JtYXSUTnViaAYpgZR9lChoCYxfQzovUHJvamVjdHMvTmF2aWdh
dGluZ1N0b3JpZXMvaXNzdWVzL29yYW5nZS1zdG9yeS1uYXZpZ2F0b3IvZGF0YS9kdXRjaF9oYWxs
aWRheV9hY3Rpb25fbGlzdC5jc3aUaAtOaAxOaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMV0M6L1By
b2plY3RzL05hdmlnYXRpbmdTdG9yaWVzL2lzc3Vlcy9vcmFuZ2Utc3RvcnktbmF2aWdhdG9yL2Rh
dGEvZGljdF9zaW5nbGVfY29sdW1uLmNzdpRoC05oDE5oDWgOaA9oDmgQjBhPcmFuZ2UuZGF0YS5p
by5DU1ZSZWFkZXKUdWJoBimBlH2UKGgJjFlDOi9Qcm9qZWN0cy9OYXZpZ2F0aW5nU3Rvcmllcy9v
cmFuZ2Utc3RvcnktbmF2aWdhdG9yL2RhdGEyL2R1dGNoX2hhbGxpZGF5X2FjdGlvbl9saXN0LmNz
dpRoC05oDE5oDWgOaA9oDmgQTnViaAYpgZR9lChoCYxiL2hvbWUvZXJpa3QvcHJvamVjdHMvbmF2
aWdhdGluZ3N0b3JpZXMvdmVudjMvbGliL3B5dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9PcmFuZ2Uv
ZGF0YXNldHMvaXJpcy50YWKUaAuMD3NhbXBsZS1kYXRhc2V0c5RoDIwIaXJpcy50YWKUaA1oDmgP
aA5oEE51YmgGKYGUfZQoaAmMZS9ob21lL2VyaWt0L3Byb2plY3RzL25hdmlnYXRpbmdzdG9yaWVz
L3ZlbnYzL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL3RpdGFu
aWMudGFilGgLaB5oDIwLdGl0YW5pYy50YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMZS9ob21l
L2VyaWt0L3Byb2plY3RzL25hdmlnYXRpbmdzdG9yaWVzL3ZlbnYzL2xpYi9weXRob24zLjEwL3Np
dGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2hvdXNpbmcudGFilGgLaB5oDIwLaG91c2luZy50
YWKUaA1oDmgPaA5oEE51YmgGKYGUfZQoaAmMay9ob21lL2VyaWt0L3Byb2plY3RzL25hdmlnYXRp
bmdzdG9yaWVzL3ZlbnYzL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFz
ZXRzL2hlYXJ0X2Rpc2Vhc2UudGFilGgLaB5oDIwRaGVhcnRfZGlzZWFzZS50YWKUaA1oDmgPaA5o
EE51YmgGKYGUfZQoaAmMbC9ob21lL2VyaWt0L3Byb2plY3RzL25hdmlnYXRpbmdzdG9yaWVzL3Zl
bnYzL2xpYi9weXRob24zLjEwL3NpdGUtcGFja2FnZXMvT3JhbmdlL2RhdGFzZXRzL2Jyb3duLXNl
bGVjdGVkLnRhYpRoC2geaAyMEmJyb3duLXNlbGVjdGVkLnRhYpRoDWgOaA9oDmgQTnViaAYpgZR9
lChoCYxhL2hvbWUvZXJpa3QvcHJvamVjdHMvbmF2aWdhdGluZ3N0b3JpZXMvdmVudjMvbGliL3B5
dGhvbjMuMTAvc2l0ZS1wYWNrYWdlcy9PcmFuZ2UvZGF0YXNldHMvem9vLnRhYpRoC2geaAyMB3pv
by50YWKUaA1oDmgPaA5oEE51YmWMC3JlY2VudF91cmxzlF2UjBNzYXZlZFdpZGdldEdlb21ldHJ5
lENCAdnQywADAAAAAAJdAAAA2wAABNwAAANFAAACXQAAAQAAAATcAAADRQAAAAAAAAAAB4AAAAJd
AAABAAAABNwAAANFlIwLc2hlZXRfbmFtZXOUfZSMBnNvdXJjZZRLAIwDdXJslGgOjA1kb21haW5f
ZWRpdG9ylH2UjAtfX3ZlcnNpb25fX5RLAYwQY29udGV4dF9zZXR0aW5nc5RdlIwVb3Jhbmdld2lk
Z2V0LnNldHRpbmdzlIwHQ29udGV4dJSTlCmBlH2UKIwGdmFsdWVzlH2UKIwJdmFyaWFibGVzlF2U
aDx9lGhIXZQoXZQojAVyZWFsbZSMFE9yYW5nZS5kYXRhLnZhcmlhYmxllIwQRGlzY3JldGVWYXJp
YWJsZZSTlEsAjBVCZWluZywgRG9pbmcsIFNlbnNpbmeUiWVdlCiMB3Byb2Nlc3OUaFBLAIw9QmVo
YXZpb3JhbCwgRXhpc3RlbnRpYWwsIE1hdGVyaWFsLCBNZW50YWwsIFJlbGF0aW9uYWwsIFZlcmJh
bJSJZV2UKIwGcHJvc3VilGhQSwCMhEJlaGF2aW9yYWwsIEV4aXN0ZW50aWFsLCBNYXRlcmlhbCwg
TWVudGFsOiBDb2duaXRpdmUsIE1lbnRhbDogRGVzaWRlcmF0aXZlLCBNZW50YWw6IEVtb3RpdmUs
IE1lbnRhbDogUGVyc3BlY3RpdmUsIFJlbGF0aW9uYWwsIFZlcmJhbJSJZV2UKIwDc3VilGhQSwCM
s0FjdHMgdmVyYmFsbHksIEJvZGlseSBwb3N0dXJlcywgQ2lyY3Vtc3RhbnRpYWwsIENvZ25pdGl2
ZSwgQ3JlYXRpdmUsIERlc2lkZXJhdGl2ZSwgRGlzcG9zaXRpdmUsIEVtb3RpdmUsIEV4aXN0ZW50
aWFsLCBJbnRlbnNpdmUsIFBlcnNwZWN0aXZlLCBQaHlzaW9sb2dpY2FsLCBQb3NzZXNzaXZlLCBW
ZXJiYWwgYWN0lIllXZQojAR3b3JklGhOjA5TdHJpbmdWYXJpYWJsZZSTlEsCaA6JZWVzaD5LAXWM
CmF0dHJpYnV0ZXOUKIwFcmVhbG2UXZQojAVCZWluZ5SMBURvaW5nlIwHU2Vuc2luZ5RlhpSMB3By
b2Nlc3OUXZQojApCZWhhdmlvcmFslIwLRXhpc3RlbnRpYWyUjAhNYXRlcmlhbJSMBk1lbnRhbJSM
ClJlbGF0aW9uYWyUjAZWZXJiYWyUZYaUjAZwcm9zdWKUXZQojApCZWhhdmlvcmFslIwLRXhpc3Rl
bnRpYWyUjAhNYXRlcmlhbJSMEU1lbnRhbDogQ29nbml0aXZllIwUTWVudGFsOiBEZXNpZGVyYXRp
dmWUjA9NZW50YWw6IEVtb3RpdmWUjBNNZW50YWw6IFBlcnNwZWN0aXZllIwKUmVsYXRpb25hbJSM
BlZlcmJhbJRlhpSMA3N1YpRdlCiMDUFjdHMgdmVyYmFsbHmUjA9Cb2RpbHkgcG9zdHVyZXOUjA5D
aXJjdW1zdGFudGlhbJSMCUNvZ25pdGl2ZZSMCENyZWF0aXZllIwMRGVzaWRlcmF0aXZllIwLRGlz
cG9zaXRpdmWUjAdFbW90aXZllIwLRXhpc3RlbnRpYWyUjAlJbnRlbnNpdmWUjAtQZXJzcGVjdGl2
ZZSMDVBoeXNpb2xvZ2ljYWyUjApQb3NzZXNzaXZllIwKVmVyYmFsIGFjdJRlhpR0lIwFbWV0YXOU
jAR3b3JklEsDhpSFlIwKY2xhc3NfdmFyc5QpjBJtb2RpZmllZF92YXJpYWJsZXOUXZR1YmF1Lg==
</properties>
		<properties node_id="15" format="literal">{'auto_commit': True, 'color_by_class': False, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o\x00\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o', 'select_rows': True, 'show_attribute_labels': False, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="16" format="literal">{'auto_commit': True, 'color_by_class': False, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\n\x00\x00\x00\x05p\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o\x00\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o', 'select_rows': True, 'show_attribute_labels': False, 'show_distributions': False, 'stored_selection': {'rows': [], 'columns': []}, 'stored_sort': [], '__version__': 1}</properties>
		<properties node_id="17" format="pickle">gASV3wQAAAAAAAB9lCiMEmNvbnRyb2xBcmVhVmlzaWJsZZSIjAtjdXJyZW50UGF0aJSMXy9ob21l
L2VyaWt0L3Byb2plY3RzL25hdmlnYXRpbmdzdG9yaWVzL29yYW5nZS1zdG9yeS1uYXZpZ2F0b3Iv
ZG9jL3dpZGdldHMvZmFpcnl0YWxlcy90ZXh0X2ZpbGVzlIwIbGVtbWFfY2KUiIwGbmVyX2NilImM
BnBvc19jYpSJjAxyZWNlbnRfcGF0aHOUXZQojB5vcmFuZ2V3aWRnZXQudXRpbHMuZmlsZWRpYWxv
Z3OUjApSZWNlbnRQYXRolJOUKYGUfZQojAdhYnNwYXRolGgDjAZwcmVmaXiUTowHcmVscGF0aJRO
jAV0aXRsZZSMAJSMBXNoZWV0lGgSjAtmaWxlX2Zvcm1hdJROdWJoCymBlH2UKGgOjGEvaG9tZS9l
cmlrdC9wcm9qZWN0cy9uYXZpZ2F0aW5nc3Rvcmllcy9vcmFuZ2Utc3RvcnktbmF2aWdhdG9yL2Rv
Yy93aWRnZXRzL2ZhaXJ5dGFsZXMvdGV4dF9maWxlc18zlGgPTmgQTmgRaBJoE2gSaBROdWJljAty
ZWNlbnRfdXJsc5RdlCiMRGh0dHA6Ly9maWxlLmJpb2xhYi5zaS90ZXh0LXNlbWFudGljcy9kYXRh
L3Byb3Bvc2Fscy10by1nb3Zlcm5tZW50LTFrlIxEaHR0cDovL2ZpbGUuYmlvbGFiLnNpL3RleHQt
c2VtYW50aWNzL2RhdGEvcHJvcG9zYWxzLXRvLWdvdmVybWVudC0xay+UjERodHRwOi8vZmlsZS5i
aW9sYWIuc2kvdGV4dC1zZW1hbnRpY3MvZGF0YS9wcm9wb3NhbHMtdG8tZ292ZXJtZW50LTJrL5SM
PGh0dHA6Ly9maWxlLmJpb2xhYi5zaS90ZXh0LXNlbWFudGljcy9kYXRhL3ByZWRsb2dpLXZsYWRp
LTFrL5RljBNzYXZlZFdpZGdldEdlb21ldHJ5lENCAdnQywADAAAAAALAAAABQQAABHkAAAK1AAAC
wAAAAWYAAAR5AAACtQAAAAAAAAAAB4AAAALAAAABZgAABHkAAAK1lIwGc291cmNllEsAjAtfX3Zl
cnNpb25fX5RLAowQY29udGV4dF9zZXR0aW5nc5RdlCiMFW9yYW5nZXdpZGdldC5zZXR0aW5nc5SM
B0NvbnRleHSUk5QpgZR9lCiMBnZhbHVlc5R9lCiMCGxhbmd1YWdllIwCbmyUaCFLAnWMDmRvY3Vt
ZW50c19oYXNolIoITg+VastwaLt1YmgmKYGUfZQoaCl9lCiMCGxhbmd1YWdllIwCbmyUaCFLAnVo
LYoIKTbKMulBhuF1YmgmKYGUfZQoaCl9lChoMWgyaCFLAnVoLYoIo1W/yhlrB5x1YmgmKYGUfZQo
aCl9lCiMCGxhbmd1YWdllIwCbmyUaCFLAnVoLYoINAeIXJB3sSx1YmgmKYGUfZQoaCl9lChoOWg6
aCFLAnVoLYoI53dnbq2QjHZ1YmgmKYGUfZQoaCl9lCiMCGxhbmd1YWdllIwCbmyUaCFLAnVoLYoI
6PIn8APvX+11YmgmKYGUfZQoaCl9lCiMCGxhbmd1YWdllIwCbmyUaCFLAnVoLYoIRMdqkNsfTaJ1
YmV1Lg==
</properties>
		<properties node_id="18" format="literal">{'auto_commit': True, 'color_by_class': False, 'controlAreaVisible': True, 'savedWidgetGeometry': b'\x01\xd9\xd0\xcb\x00\x03\x00\x00\xff\xff\xff\xff\xff\xff\xff\xf8\x00\x00\n\x00\x00\x00\x05p\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o\x00\x00\x00\x00\x02\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x17\x00\x00\t\xff\x00\x00\x05o', 'select_rows': True, 'show_attribute_labels': False, 'show_distributions': False, 'stored_selection': {'rows': [1], 'columns': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]}, 'stored_sort': [], '__version__': 1}</properties>
	</node_properties>
	<session_state>
		<window_groups />
	</session_state>
</scheme>
